-- Exported from QuickDBD: https://www.quickdatabasediagrams.com/
-- Link to schema: https://app.quickdatabasediagrams.com/#/d/rFLqtS
-- NOTE! If you have used non-SQL datatypes in your design, you will have to change these here.


-- titles table generated by QuickDBD
CREATE TABLE "titles" (
    "title_id" VARCHAR(10)   NOT NULL,
    "title" VARCHAR(255)   NOT NULL,
    CONSTRAINT "pk_titles" PRIMARY KEY (
        "title_id"
     )
);

-- select all for review of contents of titles
select * from titles;

------------------------------------------------------------------------------------------
-- employee table generated by QuickDBD
CREATE TABLE "employee" (
    "emp_no" int   NOT NULL,
    "emp_title_id" varchar(10)   NOT NULL,
    "birth_date" date   NOT NULL,
    "first_name" varchar(30)   NOT NULL,
    "last_name" varchar(30)   NOT NULL,
    "sex" varchar(1)   NOT NULL,
    "hire_date" date   NOT NULL,
    CONSTRAINT "pk_employee" PRIMARY KEY (
        "emp_no"
     )
);

-- select all for review of contents of employee
select * from employee
order by emp_no;

------------------------------------------------------------------------------------------
-- departments table generated by QuickDBD
CREATE TABLE "departments" (
    "dept_no" varchar(10)   NOT NULL,
    "dept_name" varchar(255)   NOT NULL,
    CONSTRAINT "pk_departments" PRIMARY KEY (
        "dept_no"
     )
);

-- select all for review of contents of departments - shows name of department based on dept_no
select * from departments;

------------------------------------------------------------------------------------------
-- dept_emp table generated by QuickDBD - shows every employee's department
CREATE TABLE "dept_emp" (
    "emp_no" int   NOT NULL,
    "dept_no" varchar(10)   NOT NULL
);

-- select all for review of contents of dept_emp - note contains emp_no and dept_no
select * from dept_emp;

------------------------------------------------------------------------------------------
-- dept_manager table generated by QuickDBD
CREATE TABLE "dept_manager" (
    "dept_no" varchar(10)   NOT NULL,
    "emp_no" int   NOT NULL
);

-- select all for review of contents of dept_manager - shows employee number for all dept managers
select * from dept_manager;

------------------------------------------------------------------------------------------
CREATE TABLE "salaries" (
    "emp_no" int   NOT NULL,
    "salary" int   NOT NULL
);

-- select all for review of contents
select * from salaries;

------------------------------------------------------------------------------------------
ALTER TABLE "employee" ADD CONSTRAINT "fk_employee_emp_title_id" FOREIGN KEY("emp_title_id")
REFERENCES "titles" ("title_id");

ALTER TABLE "dept_emp" ADD CONSTRAINT "fk_dept_emp_emp_no" FOREIGN KEY("emp_no")
REFERENCES "employee" ("emp_no");

ALTER TABLE "dept_emp" ADD CONSTRAINT "fk_dept_emp_dept_no" FOREIGN KEY("dept_no")
REFERENCES "departments" ("dept_no");

ALTER TABLE "dept_manager" ADD CONSTRAINT "fk_dept_manager_dept_no" FOREIGN KEY("dept_no")
REFERENCES "departments" ("dept_no");

ALTER TABLE "dept_manager" ADD CONSTRAINT "fk_dept_manager_emp_no" FOREIGN KEY("emp_no")
REFERENCES "employee" ("emp_no");

ALTER TABLE "salaries" ADD CONSTRAINT "fk_salaries_emp_no" FOREIGN KEY("emp_no")
REFERENCES "employee" ("emp_no");

-- Query for question #1  (List the following details of each employee: employee number, 
-- last name, first name, sex, and salary.)

select employee.emp_no, employee.last_name, employee.first_name, employee.sex, salaries.salary
from employee
join salaries on employee.emp_no=salaries.emp_no;

-- Query for question #2 (List first name, last name, and hire date for employees who were hired in 1986.)

select first_name, last_name, hire_date
from employee
where hire_date between '1986-01-01' and '1986-12-31';

-- Query for question #3 (List the manager of each department with the following information: department number, 
-- department name, the manager's employee number, last name, first name.)

select departments.dept_no,  departments.dept_name, employee.emp_no, employee.last_name, employee.first_name
from employee
join dept_manager on employee.emp_no=dept_manager.emp_no
join departments on dept_manager.dept_no=departments.dept_no;

-- Query for question #4 (List the department of each employee with the following information: employee number, 
-- last name, first name, and department name.)

select  departments.dept_name, employee.emp_no, employee.last_name, employee.first_name
from departments
join dept_emp on departments.dept_no=dept_emp.dept_no
join employee on dept_emp.emp_no=employee.emp_no
order by dept_emp.emp_no;

-- Query for question #5 (List first name, last name, and sex for employees whose first name is "Hercules" and 
-- last names begin with "B.")

select first_name, last_name, sex
from employee
where first_name = 'Hercules' and last_name like 'B%';

-- Query for question #6 (List all employees in the Sales department, including their employee number, 
-- last name, first name, and department name.)

select dept_emp.emp_no, employee.last_name, employee.first_name, departments.dept_name
from employee
join dept_emp on employee.emp_no = dept_emp.emp_no
join departments on dept_emp.dept_no = departments.dept_no
where dept_name = 'Sales';
	
-- Query for question #7 (List all employees in the Sales and Development departments, including their 
-- employee number, last name, first name, and department name.)

select dept_emp.emp_no, employee.last_name, employee.first_name, departments.dept_name
from employee
join dept_emp on employee.emp_no = dept_emp.emp_no
join departments on dept_emp.dept_no = departments.dept_no
where dept_name = 'Sales' or dept_name = 'Development';

-- Query for question #8 (List the frequency count of employee last names (i.e., how many 
-- employees share each last name) in descending order.)

select last_name, Count(last_name) As "Frequency"
from employee
group by last_name
order by count(last_name) desc;



